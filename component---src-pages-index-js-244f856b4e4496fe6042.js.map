{"version":3,"sources":["webpack:///./src/components/arrow-button/index.module.scss","webpack:///./src/components/arrow-button/index.js","webpack:///./src/components/logo/index.js","webpack:///./src/components/twitch-player.js","webpack:///./src/pages/index.js","webpack:///./src/components/logo/index.module.scss"],"names":["module","exports","ArrowButton","variant","onClick","href","children","className","styles","root","Logo","useState","c","setC","egg","greenText","alt","TwitchPlayer","anchor","document","body","dark","mute","player","useRef","embed","setEmbed","useEffect","window","playerContainer","current","script","createElement","src","async","addEventListener","Twitch","Embed","width","height","channel","theme","appendChild","removeChild","innerHTML","setMuted","ref","id","style","maxWidth","maxHeight","IndexPage","twitch","setTwitch","darkMode","setDarkMode","audio","sw","setAudio","values","location","hash","title"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,QAAU,iC,+HCEnF,SAASC,EAAT,GAKX,IAAD,IAJCC,eAID,MAJW,GAIX,EAHCC,EAGD,EAHCA,QAGD,IAFCC,YAED,MAFQ,IAER,EADCC,EACD,EADCA,SAEA,OACI,uBAAGD,KAAMA,EAAME,UAAcC,IAAOC,KAAZ,IAAoBD,IAAOL,IAC/C,yBAAKC,QAASA,GAAUE,I,qCCRrB,SAASI,EAAT,GAA4D,IAA5CP,EAA2C,EAA3CA,QAA2C,IAAlCC,eAAkC,MAAxB,aAAwB,MAAdC,YAAc,MAAP,IAAO,EACtE,EAAkBM,mBAAS,GAApBC,EAAP,KAAUC,EAAV,KACMC,EACF,0BAAMP,UAAWC,IAAOO,WAAxB,yVAaJ,OACI,yBAAKR,UAAWC,IAAOC,KAAML,QALb,WAChBA,IACAS,EAAKD,EAAI,KAIJA,EAAI,GACD,uBAAGL,UAAWC,IAAOL,GAAUE,KAAMA,GACjC,yBAAKW,IAAI,eAGbF,G,gBCxBD,SAASG,EAAT,GAIX,IAAD,IAHCC,cAGD,MAHUC,SAASC,KAGnB,MAFCC,YAED,aADCC,YACD,SACOC,EAASC,mBACf,EAA0Bb,qBAAnBc,EAAP,KAAcC,EAAd,KA+BA,OA9BAC,qBAAU,WACN,GAAI,oBAAOC,OAAwB,CAC/B,IAAMC,EAAkBN,EAAOO,QACzBC,EAASZ,SAASa,cAAc,UAgBtC,OAdAD,EAAOE,IAAP,0CACAF,EAAOG,OAAQ,EACfH,EAAOI,iBAAiB,QAAQ,WAC5BT,EACI,IAAIE,OAAOQ,OAAOC,MAAM,eAAgB,CACpCC,MAAO,OACPC,OAAQ,OACRC,QAAS,iBACTC,MAAOpB,EAAO,OAAS,cAInCH,EAAOwB,YAAYX,GAEZ,WACHb,EAAOyB,YAAYZ,GACnBF,EAAgBe,UAAY,OAGrC,CAAC1B,EAAQG,IACZM,qBAAU,WACFF,GACAA,EAAMoB,SAASvB,KAEpB,CAACG,EAAOH,IAEP,oCACI,yBACIwB,IAAKvB,EACLwB,GAAG,eACHC,MAAO,CACHC,SAAU,SACVX,MAAO,OACPC,OAAQ,OACRW,UAAW,aCxChB,SAASC,IAiBpB,IAAM1C,EAAOe,mBACb,EAA4Bb,oBAAS,GAA9ByC,EAAP,KAAeC,EAAf,KACA,EAAgC1C,mBAAS,GAAlC2C,EAAP,KAAiBC,EAAjB,KACA,EAA0B5C,mBAAS,GAA5B6C,EAAP,KAEMC,EAAK,CACPF,cACAG,SAJJ,KAKIC,OAAQ,CAAEL,WAAUE,UASxB,OANA7B,qBAAU,WACF,oBAAOC,QACPyB,EAAmC,YAAzBzB,OAAOgC,SAASC,QAE/B,IAGC,kBAAC,IAAD,CAAQf,IAAKrC,EAAMgD,GAAIA,GACnB,kBAAC,IAAD,CAAKK,MAAM,sBACVV,EACG,oCACI,kBAAClD,EAAD,CACIC,QAAQ,OACRC,QAAS,WACLiD,GAAU,KAHlB,QAQA,kBAACpC,EAAD,CACIC,OAAQT,EAAKqB,QACbT,KAAMiC,EACNhC,KAAMkC,KAId,kBAAC9C,EAAD,CACIP,QAAQ,OACRC,QAAS,WACLiD,GAAU,IAEdhD,KAAK,e,qBClEzBL,EAAOC,QAAU,CAAC,UAAY,iCAAiC,KAAO,4BAA4B,KAAO,4BAA4B,KAAO,4BAA4B,WAAa","file":"component---src-pages-index-js-244f856b4e4496fe6042.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index-module--root--2kLyg\",\"back\":\"index-module--back--Z4mqE\",\"forward\":\"index-module--forward--SdJ5L\"};","import React from 'react';\nimport styles from './index.module.scss';\n\nexport default function ArrowButton({\n    variant = '',\n    onClick,\n    href = '#',\n    children\n}) {\n    return (\n        <a href={href} className={`${styles.root} ${styles[variant]}`}>\n            <div onClick={onClick}>{children}</div>\n        </a>\n    );\n}\n","import React, { useState } from 'react';\nimport styles from './index.module.scss';\n\nexport default function Logo({ variant, onClick = () => {}, href = '#' }) {\n    const [c, setC] = useState(0);\n    const egg = (\n        <code className={styles.greenText}>\n            01000110 01110101 01100011 01101011 00100000 01111001 01101111\n            01110101 00101110 00100000 01010011 01110100 01101111 01110000\n            00100000 01101101 01100101 01110011 01110011 01101001 01101110\n            01100111 00100000 01110111 01101001 01110100 01101000 00100000\n            01101101 01111001 00100000 01110111 01100101 01100010 01110011\n            01101001 01110100 01100101\n        </code>\n    );\n    const handleClick = () => {\n        onClick();\n        setC(c + 1);\n    };\n    return (\n        <div className={styles.root} onClick={handleClick}>\n            {c < 64 ? (\n                <a className={styles[variant]} href={href}>\n                    <div alt=\"noCAPTCHA\" />\n                </a>\n            ) : (\n                egg\n            )}\n        </div>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\n\nexport default function TwitchPlayer({\n    anchor = document.body,\n    dark = true,\n    mute = false\n}) {\n    const player = useRef();\n    const [embed, setEmbed] = useState();\n    useEffect(() => {\n        if (typeof window !== `undefined`) {\n            const playerContainer = player.current;\n            const script = document.createElement('script');\n            // script.crossOrigin = '';\n            script.src = `https://player.twitch.tv/js/embed/v1.js`;\n            script.async = true;\n            script.addEventListener('load', () => {\n                setEmbed(\n                    new window.Twitch.Embed('twitch-embed', {\n                        width: '100%',\n                        height: '100%',\n                        channel: 'nocaptcha_live',\n                        theme: dark ? 'dark' : 'light'\n                    })\n                );\n            });\n            anchor.appendChild(script);\n\n            return () => {\n                anchor.removeChild(script);\n                playerContainer.innerHTML = '';\n            };\n        }\n    }, [anchor, dark]);\n    useEffect(() => {\n        if (embed) {\n            embed.setMuted(mute);\n        }\n    }, [embed, mute]);\n    return (\n        <>\n            <div\n                ref={player}\n                id=\"twitch-embed\"\n                style={{\n                    maxWidth: '1920px',\n                    width: '88vw',\n                    height: '88vh',\n                    maxHeight: '1080px'\n                }}\n            ></div>\n        </>\n    );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport ArrowButton from '../components/arrow-button';\nimport Layout from '../components/layout';\nimport Logo from '../components/logo';\nimport SEO from '../components/seo';\n// import { useStaticQuery, graphql } from 'gatsby';\nimport TwitchPlayer from '../components/twitch-player';\n\nexport default function IndexPage() {\n    // const data = useStaticQuery(graphql`\n    //     query PostsQuery {\n    //         allStrapiPost {\n    //             nodes {\n    //                 data {\n    //                     id\n    //                     attributes {\n    //                         title\n    //                         content\n    //                     }\n    //                 }\n    //             }\n    //         }\n    //     }\n    // `);\n    // const posts = data?.allStrapiPost?.nodes[0]?.data;\n    const root = useRef();\n    const [twitch, setTwitch] = useState(false);\n    const [darkMode, setDarkMode] = useState(1);\n    const [audio, setAudio] = useState(1);\n\n    const sw = {\n        setDarkMode,\n        setAudio,\n        values: { darkMode, audio }\n    };\n\n    useEffect(() => {\n        if (typeof window !== `undefined`) {\n            setTwitch(window.location.hash === '#twitch');\n        }\n    }, []);\n\n    return (\n        <Layout ref={root} sw={sw}>\n            <SEO title=\"i am not a robot.\" />\n            {twitch ? (\n                <>\n                    <ArrowButton\n                        variant=\"back\"\n                        onClick={() => {\n                            setTwitch(false);\n                        }}\n                    >\n                        Home\n                    </ArrowButton>\n                    <TwitchPlayer\n                        anchor={root.current}\n                        dark={darkMode}\n                        mute={audio}\n                    />\n                </>\n            ) : (\n                <Logo\n                    variant=\"logo\"\n                    onClick={() => {\n                        setTwitch(true);\n                    }}\n                    href=\"#twitch\"\n                />\n            )}\n\n            {/* <marquee>\n                {posts.map(({ attributes }) => (\n                    <>\n                        <b>{attributes.title}: </b>\n                        <span>{attributes.content}</span>\n                    </>\n                ))}\n            </marquee> */}\n        </Layout>\n    );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greenText\":\"index-module--greenText--1m09g\",\"root\":\"index-module--root--363CI\",\"text\":\"index-module--text--Crddu\",\"logo\":\"index-module--logo--3PlfJ\",\"colorCycle\":\"index-module--color-cycle--TimLx\"};"],"sourceRoot":""}