{"version":3,"sources":["webpack:///./src/components/arrow-button/index.module.scss","webpack:///./src/components/twitch-player.js","webpack:///./src/pages/live.js","webpack:///./src/components/arrow-button/index.js"],"names":["module","exports","TwitchPlayer","_ref","dark","mute","player","useRef","embed","setEmbed","useState","useEffect","window","playerContainer","current","script","document","createElement","src","async","addEventListener","Twitch","Embed","width","height","channel","theme","appendChild","removeChild","setMuted","React","ref","id","style","maxWidth","maxHeight","marginTop","LivePage","darkMode","setDarkMode","audio","setAudio","sw","values","Layout","SEO","title","ArrowButton","variant","href","fixed","color","onClick","fullWidth","children","className","styles","root"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,4BAA4B,KAAO,4BAA4B,QAAU,+BAA+B,OAAS,8BAA8B,UAAY,iCAAiC,YAAc,mCAAmC,MAAQ,+B,8ICC/P,SAASC,EAAYC,GAGhC,IAHiC,KACjCC,GAAO,EAAI,KACXC,GAAO,GACVF,EACG,MAAMG,EAASC,oBACT,EAACC,EAAM,EAACC,GAAYC,qBA6B1B,OA5BAC,oBAAU,KACN,GAAiB,oBAANC,OAAwB,CAC/B,MAAMC,EAAkBP,EAAOQ,QACzBC,EAASC,SAASC,cAAc,UAetC,OAdAF,EAAOG,IAAG,0CACVH,EAAOI,OAAQ,EACfJ,EAAOK,iBAAiB,OAAQ,KAC5BX,EACI,IAAIG,OAAOS,OAAOC,MAAM,eAAgB,CACpCC,MAAO,OACPC,OAAQ,OACRC,QAAS,iBACTC,MAAOtB,EAAO,OAAS,aAInCS,EAAgBc,YAAYZ,GAErB,KACHF,EAAgBe,YAAYb,MAGrC,CAACX,IACJO,oBAAU,KACFH,GACAA,EAAMqB,SAASxB,IAEpB,CAACG,EAAOH,IAEPyB,IAAAb,cAAA,OACIc,IAAKzB,EACL0B,GAAG,eACHC,MAAO,CACHC,SAAU,SACVX,MAAO,OACPC,OAAQ,OACRW,UAAW,SACXC,UAAW,UCvCZ,SAASC,IACpB,MAAM,EAACC,EAAS,EAACC,GAAe7B,mBAAS,IACnC,EAAC8B,EAAM,EAACC,GAAY/B,mBAAS,GAC7BgC,EAAK,CACPH,cACAE,WACAE,OAAQ,CAAEL,WAAUE,UAExB,OACIV,IAAAb,cAAC2B,IAAM,CAACF,GAAIA,GACRZ,IAAAb,cAAC4B,IAAG,CAACC,MAAM,UACXhB,IAAAb,cAAC8B,IAAW,CAACC,QAAQ,OAAOC,KAAK,IAAIC,OAAK,GAAC,QAG3CpB,IAAAb,cAACf,EAAY,CAACE,KAAMkC,EAAUjC,KAAMmC,O,kCCpBhD,gFAGe,SAASO,EAAW5C,GAQ/B,IARgC,QAChC6C,EAAU,GAAE,MACZG,EAAQ,GAAE,QACVC,EAAO,KACPH,EAAO,IAAG,MACVC,GAAQ,EAAK,UACbG,GAAY,EAAK,SACjBC,GACHnD,EACG,OACI2B,IAAAb,cAAA,KACIgC,KAAMA,EACNM,UAAcC,IAAOC,KAAI,IAAID,IAAOR,GAAQ,KACxCG,EAAQK,IAAOL,GAAS,IAAE,KAC1BD,EAAQM,IAAON,MAAQ,IAAE,KACzBG,EAAYG,IAAOH,UAAY,KAGnCvB,IAAAb,cAAA,OAAKmC,QAASA,GAAUE","file":"component---src-pages-live-js-8a8f83a6a86c29fe49da.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"index-module--root--2kLyg\",\"back\":\"index-module--back--Z4mqE\",\"forward\":\"index-module--forward--SdJ5L\",\"filled\":\"index-module--filled--1nq0z\",\"fullWidth\":\"index-module--fullWidth--1Kmwn\",\"filledBlock\":\"index-module--filledBlock--2eHb-\",\"fixed\":\"index-module--fixed--2tUga\"};","import React, { useEffect, useRef, useState } from 'react';\n\nexport default function TwitchPlayer({\n    dark = true,\n    mute = false\n}) {\n    const player = useRef();\n    const [embed, setEmbed] = useState();\n    useEffect(() => {\n        if (typeof window !== `undefined`) {\n            const playerContainer = player.current;\n            const script = document.createElement('script');\n            script.src = `https://player.twitch.tv/js/embed/v1.js`;\n            script.async = true;\n            script.addEventListener('load', () => {\n                setEmbed(\n                    new window.Twitch.Embed('twitch-embed', {\n                        width: '100%',\n                        height: '100%',\n                        channel: 'nocaptcha_live',\n                        theme: dark ? 'dark' : 'light'\n                    })\n                );\n            });\n            playerContainer.appendChild(script);\n\n            return () => {\n                playerContainer.removeChild(script);\n            };\n        }\n    }, [dark]);\n    useEffect(() => {\n        if (embed) {\n            embed.setMuted(mute);\n        }\n    }, [embed, mute]);\n    return (\n        <div\n            ref={player}\n            id=\"twitch-embed\"\n            style={{\n                maxWidth: '1920px',\n                width: '88vw',\n                height: '88vh',\n                maxHeight: '1080px',\n                marginTop: '4rem'\n            }}\n        ></div>\n    );\n}\n","import ArrowButton from '../components/arrow-button';\nimport Layout from '../components/layout';\nimport React, { useState } from 'react';\nimport SEO from '../components/seo';\nimport TwitchPlayer from '../components/twitch-player';\n\nexport default function LivePage() {\n    const [darkMode, setDarkMode] = useState(1);\n    const [audio, setAudio] = useState(1);\n    const sw = {\n        setDarkMode,\n        setAudio,\n        values: { darkMode, audio }\n    };\n    return (\n        <Layout sw={sw}>\n            <SEO title=\"mixes\" />\n            <ArrowButton variant=\"back\" href=\"/\" fixed>\n                Home\n            </ArrowButton>\n            <TwitchPlayer dark={darkMode} mute={audio} />\n        </Layout>\n    );\n}\n","import React from 'react';\nimport styles from './index.module.scss';\n\nexport default function ArrowButton({\n    variant = '',\n    color = '',\n    onClick,\n    href = '#',\n    fixed = false,\n    fullWidth = false,\n    children\n}) {\n    return (\n        <a\n            href={href}\n            className={`${styles.root} ${styles[variant]} ${\n                color ? styles[color] : ''\n            } ${fixed ? styles.fixed : ''} ${\n                fullWidth ? styles.fullWidth : ''\n            }`}\n        >\n            <div onClick={onClick}>{children}</div>\n        </a>\n    );\n}\n"],"sourceRoot":""}